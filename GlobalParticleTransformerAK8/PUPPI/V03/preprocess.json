{
    "output_names": [
      "probXbb",
      "probXcc",
      "probXcs",
      "probXqq",
      "probXtauhtaue",
      "probXtauhtaum",
      "probXtauhtauh",
      "probXWW4q",
      "probXWW3q",
      "probXWWqqev",
      "probXWWqqmv",
      "probTopbWqq",
      "probTopbWq",
      "probTopbWev",
      "probTopbWmv",
      "probTopbWtauhv",
      "probQCD",
      "massCorrX2p",
      "massCorrXWW",
      "massCorrTopbW",
      "massCorrQCD",
      "probWithMassTopvsQCD",
      "probWithMassWvsQCD",
      "probWithMassZvsQCD",
      "hidNeuron000",
      "hidNeuron001",
      "hidNeuron002",
      "hidNeuron003",
      "hidNeuron004",
      "hidNeuron005",
      "hidNeuron006",
      "hidNeuron007",
      "hidNeuron008",
      "hidNeuron009",
      "hidNeuron010",
      "hidNeuron011",
      "hidNeuron012",
      "hidNeuron013",
      "hidNeuron014",
      "hidNeuron015",
      "hidNeuron016",
      "hidNeuron017",
      "hidNeuron018",
      "hidNeuron019",
      "hidNeuron020",
      "hidNeuron021",
      "hidNeuron022",
      "hidNeuron023",
      "hidNeuron024",
      "hidNeuron025",
      "hidNeuron026",
      "hidNeuron027",
      "hidNeuron028",
      "hidNeuron029",
      "hidNeuron030",
      "hidNeuron031",
      "hidNeuron032",
      "hidNeuron033",
      "hidNeuron034",
      "hidNeuron035",
      "hidNeuron036",
      "hidNeuron037",
      "hidNeuron038",
      "hidNeuron039",
      "hidNeuron040",
      "hidNeuron041",
      "hidNeuron042",
      "hidNeuron043",
      "hidNeuron044",
      "hidNeuron045",
      "hidNeuron046",
      "hidNeuron047",
      "hidNeuron048",
      "hidNeuron049",
      "hidNeuron050",
      "hidNeuron051",
      "hidNeuron052",
      "hidNeuron053",
      "hidNeuron054",
      "hidNeuron055",
      "hidNeuron056",
      "hidNeuron057",
      "hidNeuron058",
      "hidNeuron059",
      "hidNeuron060",
      "hidNeuron061",
      "hidNeuron062",
      "hidNeuron063",
      "hidNeuron064",
      "hidNeuron065",
      "hidNeuron066",
      "hidNeuron067",
      "hidNeuron068",
      "hidNeuron069",
      "hidNeuron070",
      "hidNeuron071",
      "hidNeuron072",
      "hidNeuron073",
      "hidNeuron074",
      "hidNeuron075",
      "hidNeuron076",
      "hidNeuron077",
      "hidNeuron078",
      "hidNeuron079",
      "hidNeuron080",
      "hidNeuron081",
      "hidNeuron082",
      "hidNeuron083",
      "hidNeuron084",
      "hidNeuron085",
      "hidNeuron086",
      "hidNeuron087",
      "hidNeuron088",
      "hidNeuron089",
      "hidNeuron090",
      "hidNeuron091",
      "hidNeuron092",
      "hidNeuron093",
      "hidNeuron094",
      "hidNeuron095",
      "hidNeuron096",
      "hidNeuron097",
      "hidNeuron098",
      "hidNeuron099",
      "hidNeuron100",
      "hidNeuron101",
      "hidNeuron102",
      "hidNeuron103",
      "hidNeuron104",
      "hidNeuron105",
      "hidNeuron106",
      "hidNeuron107",
      "hidNeuron108",
      "hidNeuron109",
      "hidNeuron110",
      "hidNeuron111",
      "hidNeuron112",
      "hidNeuron113",
      "hidNeuron114",
      "hidNeuron115",
      "hidNeuron116",
      "hidNeuron117",
      "hidNeuron118",
      "hidNeuron119",
      "hidNeuron120",
      "hidNeuron121",
      "hidNeuron122",
      "hidNeuron123",
      "hidNeuron124",
      "hidNeuron125",
      "hidNeuron126",
      "hidNeuron127",
      "hidNeuron128",
      "hidNeuron129",
      "hidNeuron130",
      "hidNeuron131",
      "hidNeuron132",
      "hidNeuron133",
      "hidNeuron134",
      "hidNeuron135",
      "hidNeuron136",
      "hidNeuron137",
      "hidNeuron138",
      "hidNeuron139",
      "hidNeuron140",
      "hidNeuron141",
      "hidNeuron142",
      "hidNeuron143",
      "hidNeuron144",
      "hidNeuron145",
      "hidNeuron146",
      "hidNeuron147",
      "hidNeuron148",
      "hidNeuron149",
      "hidNeuron150",
      "hidNeuron151",
      "hidNeuron152",
      "hidNeuron153",
      "hidNeuron154",
      "hidNeuron155",
      "hidNeuron156",
      "hidNeuron157",
      "hidNeuron158",
      "hidNeuron159",
      "hidNeuron160",
      "hidNeuron161",
      "hidNeuron162",
      "hidNeuron163",
      "hidNeuron164",
      "hidNeuron165",
      "hidNeuron166",
      "hidNeuron167",
      "hidNeuron168",
      "hidNeuron169",
      "hidNeuron170",
      "hidNeuron171",
      "hidNeuron172",
      "hidNeuron173",
      "hidNeuron174",
      "hidNeuron175",
      "hidNeuron176",
      "hidNeuron177",
      "hidNeuron178",
      "hidNeuron179",
      "hidNeuron180",
      "hidNeuron181",
      "hidNeuron182",
      "hidNeuron183",
      "hidNeuron184",
      "hidNeuron185",
      "hidNeuron186",
      "hidNeuron187",
      "hidNeuron188",
      "hidNeuron189",
      "hidNeuron190",
      "hidNeuron191",
      "hidNeuron192",
      "hidNeuron193",
      "hidNeuron194",
      "hidNeuron195",
      "hidNeuron196",
      "hidNeuron197",
      "hidNeuron198",
      "hidNeuron199",
      "hidNeuron200",
      "hidNeuron201",
      "hidNeuron202",
      "hidNeuron203",
      "hidNeuron204",
      "hidNeuron205",
      "hidNeuron206",
      "hidNeuron207",
      "hidNeuron208",
      "hidNeuron209",
      "hidNeuron210",
      "hidNeuron211",
      "hidNeuron212",
      "hidNeuron213",
      "hidNeuron214",
      "hidNeuron215",
      "hidNeuron216",
      "hidNeuron217",
      "hidNeuron218",
      "hidNeuron219",
      "hidNeuron220",
      "hidNeuron221",
      "hidNeuron222",
      "hidNeuron223",
      "hidNeuron224",
      "hidNeuron225",
      "hidNeuron226",
      "hidNeuron227",
      "hidNeuron228",
      "hidNeuron229",
      "hidNeuron230",
      "hidNeuron231",
      "hidNeuron232",
      "hidNeuron233",
      "hidNeuron234",
      "hidNeuron235",
      "hidNeuron236",
      "hidNeuron237",
      "hidNeuron238",
      "hidNeuron239",
      "hidNeuron240",
      "hidNeuron241",
      "hidNeuron242",
      "hidNeuron243",
      "hidNeuron244",
      "hidNeuron245",
      "hidNeuron246",
      "hidNeuron247",
      "hidNeuron248",
      "hidNeuron249",
      "hidNeuron250",
      "hidNeuron251",
      "hidNeuron252",
      "hidNeuron253",
      "hidNeuron254",
      "hidNeuron255"
    ],
    "input_names": [
      "cpf_features",
      "cpf_vectors",
      "cpf_mask",
      "npf_features",
      "npf_vectors",
      "npf_mask",
      "sv_features",
      "sv_vectors",
      "sv_mask"
    ],
    "cpf_features": {
      "var_names": [
        "cpfcandlt_pt_log_nopuppi",
        "cpfcandlt_e_log_nopuppi",
        "cpfcandlt_etarel",
        "cpfcandlt_phirel",
        "cpfcandlt_abseta",
        "cpfcandlt_charge",
        "cpfcandlt_isEl",
        "cpfcandlt_isMu",
        "cpfcandlt_isChargedHad",
        "cpfcandlt_isLostTrack",
        "cpfcandlt_VTX_ass",
        "cpfcandlt_lostInnerHits",
        "cpfcandlt_normchi2",
        "cpfcandlt_quality",
        "cpfcandlt_dz",
        "cpfcandlt_dzsig",
        "cpfcandlt_dxy",
        "cpfcandlt_dxysig",
        "cpfcandlt_btagEtaRel",
        "cpfcandlt_btagPtRatio",
        "cpfcandlt_btagPParRatio",
        "cpfcandlt_btagSip3dVal",
        "cpfcandlt_btagSip3dSig",
        "cpfcandlt_btagJetDistVal",
        "cpfcandlt_pixelBarrelLayersWithMeasurement",
        "cpfcandlt_pixelEndcapLayersWithMeasurement",
        "cpfcandlt_stripTECLayersWithMeasurement",
        "cpfcandlt_stripTIBLayersWithMeasurement",
        "cpfcandlt_stripTIDLayersWithMeasurement",
        "cpfcandlt_stripTOBLayersWithMeasurement"
      ],
      "var_infos": {
        "cpfcandlt_pt_log_nopuppi": {
          "median": 1,
          "norm_factor": 0.5,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_e_log_nopuppi": {
          "median": 1.3,
          "norm_factor": 0.5,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_etarel": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_phirel": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_abseta": {
          "median": 0.6,
          "norm_factor": 1.6,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_charge": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_isEl": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_isMu": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_isChargedHad": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_isLostTrack": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_VTX_ass": {
          "median": 4,
          "norm_factor": 0.3,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_lostInnerHits": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_normchi2": {
          "median": 5,
          "norm_factor": 0.2,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_quality": {
          "median": 0,
          "norm_factor": 0.2,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_dz": {
          "median": 0,
          "norm_factor": 180,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_dzsig": {
          "median": 0,
          "norm_factor": 0.9,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_dxy": {
          "median": 0.0,
          "norm_factor": 300,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_dxysig": {
          "median": 0,
          "norm_factor": 1.0,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_btagEtaRel": {
          "median": 1.5,
          "norm_factor": 0.5,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_btagPtRatio": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_btagPParRatio": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_btagSip3dVal": {
          "median": 0,
          "norm_factor": 100,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_btagSip3dSig": {
          "median": 0,
          "norm_factor": 0.5,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_btagJetDistVal": {
          "median": 0,
          "norm_factor": 40,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_pixelBarrelLayersWithMeasurement": {
          "median": 0,
          "norm_factor": 0.1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_pixelEndcapLayersWithMeasurement": {
          "median": 0,
          "norm_factor": 0.1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_stripTECLayersWithMeasurement": {
          "median": 0,
          "norm_factor": 0.1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_stripTIBLayersWithMeasurement": {
          "median": 0,
          "norm_factor": 0.1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_stripTIDLayersWithMeasurement": {
          "median": 0,
          "norm_factor": 0.1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "cpfcandlt_stripTOBLayersWithMeasurement": {
          "median": 0,
          "norm_factor": 0.1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        }
      },
      "max_length": 90,
      "min_length": 12
    },
    "cpf_vectors": {
      "var_names": [
        "cpfcandlt_px",
        "cpfcandlt_py",
        "cpfcandlt_pz",
        "cpfcandlt_energy"
      ],
      "var_infos": {
        "cpfcandlt_px": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_py": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_pz": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "cpfcandlt_energy": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        }
      },
      "max_length": 90,
      "min_length": 12
    },
    "cpf_mask": {
      "var_names": [
        "cpfcandlt_mask"
      ],
      "var_infos": {
        "cpfcandlt_mask": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        }
      },
      "max_length": 90,
      "min_length": 12
    },
    "npf_features": {
      "var_names": [
        "npfcand_pt_log_nopuppi",
        "npfcand_e_log_nopuppi",
        "npfcand_etarel",
        "npfcand_phirel",
        "npfcand_abseta",
        "npfcand_isGamma",
        "npfcand_isNeutralHad"
      ],
      "var_infos": {
        "npfcand_pt_log_nopuppi": {
          "median": 1,
          "norm_factor": 0.5,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "npfcand_e_log_nopuppi": {
          "median": 1.3,
          "norm_factor": 0.5,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "npfcand_etarel": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "npfcand_phirel": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "npfcand_abseta": {
          "median": 0.6,
          "norm_factor": 1.6,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "npfcand_isGamma": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "npfcand_isNeutralHad": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        }
      },
      "max_length": 60,
      "min_length": 8
    },
    "npf_vectors": {
      "var_names": [
        "npfcand_px",
        "npfcand_py",
        "npfcand_pz",
        "npfcand_energy"
      ],
      "var_infos": {
        "npfcand_px": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "npfcand_py": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "npfcand_pz": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "npfcand_energy": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        }
      },
      "max_length": 60,
      "min_length": 8
    },
    "npf_mask": {
      "var_names": [
        "npfcand_mask"
      ],
      "var_infos": {
        "npfcand_mask": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        }
      },
      "max_length": 60,
      "min_length": 8
    },
    "sv_features": {
      "var_names": [
        "sv_pt_log",
        "sv_mass",
        "sv_etarel",
        "sv_phirel",
        "sv_abseta",
        "sv_ntracks",
        "sv_normchi2",
        "sv_dxy",
        "sv_dxysig",
        "sv_d3d",
        "sv_d3dsig"
      ],
      "var_infos": {
        "sv_pt_log": {
          "median": 4,
          "norm_factor": 0.6,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "sv_mass": {
          "median": 1.2,
          "norm_factor": 0.3,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "sv_etarel": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "sv_phirel": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "sv_abseta": {
          "median": 0.5,
          "norm_factor": 1.6,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "sv_ntracks": {
          "median": 3,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "sv_normchi2": {
          "median": 0.8,
          "norm_factor": 0.6,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "sv_dxy": {
          "median": 0.4,
          "norm_factor": 0.25,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "sv_dxysig": {
          "median": 7,
          "norm_factor": 0.02,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "sv_d3d": {
          "median": 0.5,
          "norm_factor": 0.2,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "sv_d3dsig": {
          "median": 7,
          "norm_factor": 0.02,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        }
      },
      "max_length": 10,
      "min_length": 1
    },
    "sv_vectors": {
      "var_names": [
        "sv_px",
        "sv_py",
        "sv_pz",
        "sv_energy"
      ],
      "var_infos": {
        "sv_px": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "sv_py": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "sv_pz": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        },
        "sv_energy": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        }
      },
      "max_length": 10,
      "min_length": 1
    },
    "sv_mask": {
      "var_names": [
        "sv_mask"
      ],
      "var_infos": {
        "sv_mask": {
          "median": 0,
          "norm_factor": 1,
          "replace_inf_value": 0,
          "lower_bound": -1e+32,
          "upper_bound": 1e+32,
          "pad": 0
        }
      },
      "max_length": 10,
      "min_length": 1
    },
    "jet_features": {
      "var_names": [
        "jet_pt_log",
        "jet_energy_log",
        "jet_mass_log"
      ],
      "var_infos": {
        "jet_pt_log": {
          "median": 7,
          "norm_factor": 2,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "jet_energy_log": {
          "median": 7,
          "norm_factor": 2,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        },
        "jet_mass_log": {
          "median": 5,
          "norm_factor": 0.8,
          "replace_inf_value": 0,
          "lower_bound": -5,
          "upper_bound": 5,
          "pad": 0
        }
      },
      "max_length": 1,
      "min_length": 1
    }
  }